log syslog all;
router id <Local IP>;
protocol device {
}
protocol direct {
    disabled; # Disable by default
    ipv4; # Connect to default IPv4 table
    ipv6; # ... and to default IPv6 table
}
protocol kernel {
    ipv4 { # Connect protocol to IPv4 table by channel
        import none; # Import to table, default is import all
        export none; # Export to protocol. default is export none
    };
}
protocol kernel {
    ipv6 {
        import none; # Import to table, default is import all
        export none; # Export to protocol. default is export none
    };
}
protocol static {
    ipv4; # Again, IPv4 channel with default options
}
roa4 table roa_v4;
roa6 table roa_v6;
protocol rpki {
    roa4 { table roa_v4; };
    roa6 { table roa_v6; };
    remote "<IP or hostname of Validator>" port <Port Number (323 is default)>;
    retry keep 90;
    refresh keep 900;
    expire keep 172800;
}
function is_v4_rpki_invalid () {
    return roa_check(roa_v4, net, bgp_path.last_nonaggregated) = ROA_INVALID;
}
function is_v6_rpki_invalid () {
    return roa_check(roa_v6, net, bgp_path.last_nonaggregated) = ROA_INVALID;
}
protocol bgp bgp1 {
    description "<Neighbor Name>";
    local <Local IP> as <Local ASN>;
    neighbor <Neighbor IP> as <Neighbor ASN>;
    hold time 90;
    multihop;
    graceful restart;
    password "<password>"; 
    ipv4 {
    import keep filtered;
    import filter {
        if is_v4_rpki_invalid() then accept; #change to reject if you want to drop invalids
        accept; 
    };
    export none;
    };
    ipv6 {
    import keep filtered;
    import all;
    import filter {
        if is_v6_rpki_invalid() then accept; #change to reject if you want to drop invalids
        accept;
    };
    export none;
    };
}
